#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyApp.DataModel
{
	
	
	/// <summary>
	/// Permission to perform an action in Microsoft CRM. The platform checks for the privilege and rejects the attempt if the user does not hold the privilege.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("privilege")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.11")]
	public partial class Privilege : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Privilege() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "privilege";
		
		public const string EntityLogicalCollectionName = "privileges";
		
		public const string EntitySetName = "privileges";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Rights a user has to an instance of an entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accessright")]
		public System.Nullable<int> AccessRight
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("accessright");
			}
			set
			{
				this.OnPropertyChanging("AccessRight");
				this.SetAttributeValue("accessright", value);
				this.OnPropertyChanged("AccessRight");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to the user, the user's team, or objects shared by the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbebasic")]
		public System.Nullable<bool> CanBeBasic
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbebasic");
			}
			set
			{
				this.OnPropertyChanging("CanBeBasic");
				this.SetAttributeValue("canbebasic", value);
				this.OnPropertyChanged("CanBeBasic");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to child business units of the business unit associated with the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbedeep")]
		public System.Nullable<bool> CanBeDeep
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbedeep");
			}
			set
			{
				this.OnPropertyChanging("CanBeDeep");
				this.SetAttributeValue("canbedeep", value);
				this.OnPropertyChanged("CanBeDeep");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to the local reference of an external party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbeentityreference")]
		public System.Nullable<bool> CanBeEntityReference
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbeentityreference");
			}
			set
			{
				this.OnPropertyChanging("CanBeEntityReference");
				this.SetAttributeValue("canbeentityreference", value);
				this.OnPropertyChanged("CanBeEntityReference");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to the entire organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbeglobal")]
		public System.Nullable<bool> CanBeGlobal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbeglobal");
			}
			set
			{
				this.OnPropertyChanging("CanBeGlobal");
				this.SetAttributeValue("canbeglobal", value);
				this.OnPropertyChanged("CanBeGlobal");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to the user's business unit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbelocal")]
		public System.Nullable<bool> CanBeLocal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbelocal");
			}
			set
			{
				this.OnPropertyChanging("CanBeLocal");
				this.SetAttributeValue("canbelocal", value);
				this.OnPropertyChanged("CanBeLocal");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to parent reference of the external party.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbeparententityreference")]
		public System.Nullable<bool> CanBeParentEntityReference
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canbeparententityreference");
			}
			set
			{
				this.OnPropertyChanging("CanBeParentEntityReference");
				this.SetAttributeValue("canbeparententityreference", value);
				this.OnPropertyChanged("CanBeParentEntityReference");
			}
		}
		
		/// <summary>
		/// Information that specifies whether the privilege applies to the record filters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canberecordfilter")]
		public System.Nullable<bool> CanBeRecordFilter
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canberecordfilter");
			}
			set
			{
				this.OnPropertyChanging("CanBeRecordFilter");
				this.SetAttributeValue("canberecordfilter", value);
				this.OnPropertyChanged("CanBeRecordFilter");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Version in which the component is introduced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.OnPropertyChanging("IntroducedVersion");
				this.SetAttributeValue("introducedversion", value);
				this.OnPropertyChanged("IntroducedVersion");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component can be customized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.OnPropertyChanging("IsCustomizable");
				this.SetAttributeValue("iscustomizable", value);
				this.OnPropertyChanged("IsCustomizable");
			}
		}
		
		/// <summary>
		/// Information that specifies whether this component is managed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Name of the privilege.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the privilege.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegeid")]
		public System.Nullable<System.Guid> PrivilegeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("privilegeid");
			}
			set
			{
				this.OnPropertyChanging("PrivilegeId");
				this.SetAttributeValue("privilegeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("PrivilegeId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.PrivilegeId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the Privilege used when synchronizing customizations for the Microsoft Dynamics CRM client for Outlook
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegerowid")]
		public System.Nullable<System.Guid> PrivilegeRowId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("privilegerowid");
			}
			set
			{
				this.OnPropertyChanging("PrivilegeRowId");
				this.SetAttributeValue("privilegerowid", value);
				this.OnPropertyChanged("PrivilegeRowId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:N roleprivileges_association
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("roleprivileges_association")]
		public System.Collections.Generic.IEnumerable<MyApp.DataModel.Role> roleprivileges_association
		{
			get
			{
				return this.GetRelatedEntities<MyApp.DataModel.Role>("roleprivileges_association", null);
			}
			set
			{
				this.OnPropertyChanging("roleprivileges_association");
				this.SetRelatedEntities<MyApp.DataModel.Role>("roleprivileges_association", null, value);
				this.OnPropertyChanged("roleprivileges_association");
			}
		}
	}
}
#pragma warning restore CS1591
